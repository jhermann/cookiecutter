# autoenv script (https://github.com/kennethreitz/autoenv)
_venv_xtrace=$(set +o | grep xtrace)
set +x
_venv_name="$(basename $(pwd))"

# command line flags, mostly for CI server usage
_venv_create=false
_venv_develop=false
while test "${1:0:1}" = "-"; do
    case "$1" in
        --yes) _venv_create=true ;; # create missing venv without prompting
        --develop) _venv_develop=true ;; # always call "develop -U" on activation
        *) echo "WARNING: Ignored unknown option '$1'" ;;
    esac
    shift
done

if test \! -f ../cookiecutter.json || $_venv_create; then
    test -f ".env" && _venv_ask=true || _venv_ask=false
    for _venv_base in .venv venv . ..; do
        if test -f "$_venv_base/$_venv_name/bin/activate"; then
            deactivate 2>/dev/null || :
            . "$_venv_base/$_venv_name/bin/activate"
            if test -f setup.py; then
                $_venv_develop && python setup.py -q develop -U || :
                python setup.py --name --version --url | tr \\n \\0 \
                    | xargs -0 printf "*** Activated %s %s @ %s\\n" || :
            fi
            _venv_ask=false
            break
        fi
    done

    if $_venv_ask && test \! -d .venv; then
        $_venv_create || { read -p "No virtualenv found, shall I create one for you? [Y/n] " -n 1 -r || REPLY='n'; echo; }
        if $_venv_create || [[ $REPLY =~ ^[Yy]?$ ]]; then
            /usr/bin/virtualenv ".venv/$_venv_name"
            . ".venv/$_venv_name/bin/activate"
            pip -q --log ".venv/pip-install.log" install -UI pip
            pip -q --log ".venv/pip-install.log" install -UI "setuptools>=12.1" "wheel>=0.24.0"
            pip -q --log ".venv/pip-install.log" install -r dev-requirements.txt
            if test -f setup.py; then
                python setup.py develop -U
                python setup.py --name --version --author --author-email --license --description --url \
                    | tr \\n \\0 | xargs -0 printf "%s %s by %s <%s> [%s]\\n%s\\n%s\\n" || :
            fi
        else
            mkdir -p .venv # prevent constant prompting
        fi
    fi
fi

unset _venv_name _venv_ask _venv_create _venv_develop _venv_base
$_venv_xtrace # restore xtrace state
unset _venv_xtrace
